#BlueJ class context
comment0.target=Spielplan
comment0.text=\r\n\ 10x10\ Spielplan\ f\u00FCr\ das\ Schiffe-versenken-Spiel\r\n\r\n\ @version\ 0.1\r\n
comment1.params=
comment1.target=Spielplan()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Spielplan\r\n
comment10.params=spalte\ reihe\ wert
comment10.target=void\ setField(int,\ int,\ int)
comment10.text=\r\n\ Setzt\ den\ Wert\ eines\ Feldes\r\n\r\n\ @param\ \ \ spalte\ \ \ Spalte\ des\ Feldes\ (0<splate<11)\r\n\ @param\ \ \ reihe\ \ \ Reihe\ des\ Feldes\ (0<splate<11)\r\n\ @param\ \ \ wert\ \ \ Zustand\ des\ Feldes\ (0<\=wert<5)\r\n
comment11.params=
comment11.target=Spieler\ getSpieler()
comment11.text=\r\n\ @return\ Spielerobjekt\ des\ Spielers,\ der\ die\ Schiffe\ auf\ diesem\ Plan\ abschie\u00DFt\r\n
comment12.params=
comment12.target=Spieler\ getGegner()
comment12.text=\r\n\ @return\ Spielerobjekt\ des\ Spielers,\ der\ die\ Schiffe\ auf\ diesem\ Plan\ abschie\u00DFt\r\n
comment2.params=spalte\ reihe
comment2.target=int\ auskunftGeben(int,\ int)
comment2.text=\r\n\ Gibt\ zur\u00FCck,\ welchen\ Zustand\ das\ Feld\ hat\r\n\r\n\ @param\ \ \ spalte\ \ \ Spalte,\ in\ der\ das\ gewuenschte\ Feld\ liegt\r\n\ @param\ \ \ reihe\ \ \ Reihe,\ in\ der\ das\ gewuenschte\ Feld\ liegt\r\n\ @return\ Wert\ des\ jeweiligen\ Feldes,\ 0\=nichts,\ 1\=schiff,\ 2\=getroffen,\ 3\=versucht\r\n
comment3.params=spalte\ reihe
comment3.target=int[][]\ benachbarteFelderErmitteln(int,\ int)
comment3.text=\r\n\ Ermittelt\ alle\ 8\ Felder,\ die\ um\ ein\ spezifiziertes\ Feld\ herum\ angeordnet\ sind\r\n\r\n\ @return\ 8\ Felder\ mit\ Spalte\ und\ Reihe\ ([Index\ des\ Feldes][0\:\ Spalte,\ 1\:\ Reihe])\r\n
comment4.params=spalte\ reihe\ groesse\ orientierung
comment4.target=void\ schiffeAufnehmen(int,\ int,\ int,\ java.lang.String)
comment4.text=\r\n\ Setzt\ ein\ Schiff\ auf\ ein\ Anfangsfeld\ mit\ einer\ Orientierung\r\n\r\n\ @param\ \ \ spalte\ \ \ Spalte,\ in\ der\ das\ gewuenschte\ Feld\ liegt\r\n\ @param\ \ \ reihe\ \ \ Reihe,\ in\ der\ das\ gewuenschte\ Feld\ liegt\r\n\ @param\ \ \ orientierung\ \ \ nord,\ ost,\ sued\ und\ west,\ bei\ 1-er\ ist\ diese\ egal\r\n
comment5.params=pSpalte\ pReihe
comment5.target=boolean\ validieren(int,\ int)
comment5.text=\r\n\ Testet,\ ob\ ein\ Schiff\ dort\ platzizert\ werden\ darf\r\n\r\n\ @param\ \ \ pSpalte\ \ \ Spalte\ des\ Feldes,\ auf\ das\ ein\ Schiff\ gesetzt\ werden\ soll\r\n\ @param\ \ \ pReihe\ \ \ Reihe\ des\ Feldes,\ auf\ das\ ein\ Schiff\ gesetzt\ werden\ soll\r\n\r\n\ @return\ Wahrheitswert,\ ob\ das\ Feld\ mit\ einem\ Schiff\ belegt\ werden\ darf\r\n
comment6.params=
comment6.target=void\ gewinner()
comment6.text=\r\n\ Prueft,\ ob\ ein\ Spieler\ gewonnen\ hat\ und\ gibt\ ggf.\ das\ Spielerobjekt\ zurueck\r\n\ Moegliche\ Loesung\:\ Anzahl\ der\ Felder,\ auf\ denen\ ein\ Schiff\ ist,\ bestimmen\ und\ mit\ der\ Anzahl\ der\ Felder,\ bei\ denen\ "2"\ ist,\ abgleichen\r\n\r\n\ @return\ Objekt\ des\ Spielers,\ der\ gewonnen\ hat\r\n
comment7.params=
comment7.target=void\ grafikAusgeben()
comment7.text=\r\n\ Gibt\ das\ Spielfeld\ als\ 10x10\ Matrix\ mit\ jeweligen\ Feldwerten\ (int)\ in\ die\ Konsole\ aus\r\n
comment8.params=pSpieler
comment8.target=void\ setSpieler(Spieler)
comment8.text=\r\n\ Setzt\ den\ Spieler,\ dem\ dieser\ Spielplan\ geh\u00F6rt\ (der\ hier\ seine\ Schiffe\ platziert)\r\n
comment9.params=pGegner
comment9.target=void\ setGegner(Spieler)
comment9.text=\r\n\ Setzt\ den\ Spieler,\ der\ die\ Schiffe\ auf\ diesem\ Spielplan\ abschie\u00DFt\r\n
numComments=13
